
plugins {
	//id 'com.github.jk1.dependency-license-report' version '1.2'
    id "com.github.hierynomus.license" version "0.14.0"
}

// Load version definitions for dependencies. Info will be stored in 'versions' map
apply from: 'versions.gradle'

allprojects {
  	apply plugin: 'java'
	apply plugin: 'eclipse'
	
	apply plugin: 'com.github.hierynomus.license'
	
  	sourceCompatibility = 1.8
  	targetCompatibility = 1.8
	
  	group = 'icarus2'
  	version = '0.0.1'

  	repositories {
    	mavenCentral()
  	}  
	  	
	configurations {
		slf4j
		guava
		fastutil
		javapoet
		xerces
		lucene
		
		junit
		mockito
		uuid
	}
	  	
	dependencies {
		
		// RUNTIME ENVIRONMENT
	
	    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
		slf4j "org.slf4j:slf4j-api:${versions.slf4jVersion}"
	    // https://mvnrepository.com/artifact/org.slf4j/slf4j-jdk14
		slf4j "org.slf4j:slf4j-jdk14:${versions.slf4jVersion}"
	
	    // https://mvnrepository.com/artifact/com.google.guava/guava
		guava "com.google.guava:guava:${versions.guavaVersion}"
	
	    // https://mvnrepository.com/artifact/it.unimi.dsi/fastutil
		fastutil "it.unimi.dsi:fastutil:${versions.fastutilVersion}"
	
	    // https://mvnrepository.com/artifact/com.squareup/javapoet
		javapoet "com.squareup:javapoet:${versions.javapoetVersion}"
	    
	    // https://mvnrepository.com/artifact/xerces/xercesImpl
		xerces "xerces:xercesImpl:${versions.xercesVersion}"
	  
	  	// https://mvnrepository.com/artifact/org.apache.lucene/lucene-core
		lucene "org.apache.lucene:lucene-core:${versions.luceneVersion}"
			
		// TEST ENVIRONMENT
		    
	    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
		junit "org.junit.jupiter:junit-jupiter-api:${versions.junitVersion}"
		// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
		junit "org.junit.jupiter:junit-jupiter-engine:${versions.junitVersion}"		
		// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params
		junit "org.junit.jupiter:junit-jupiter-params:${versions.junitVersion}"
			
	    // https://mvnrepository.com/artifact/org.mockito/mockito-core
		mockito "org.mockito:mockito-core:${versions.mockitoVersion}"
	  
		// https://mvnrepository.com/artifact/com.fasterxml.uuid/java-uuid-generator
		uuid "com.fasterxml.uuid:java-uuid-generator:${versions.uuidVersion}"
	}
}

description = 'ICARUS 2 framework root'
	
// Gradle Wrapper
wrapper { 
	gradleVersion = "4.8" 
}

task iterateDeclaredDependencies {
    doLast {
        DependencySet dependencySet = configurations.slf4j.dependencies

        dependencySet.each {
            logger.quiet "$it.group:$it.name:$it.version"
        }
    }
}

subprojects {
  	
  	tasks.withType(JavaCompile) {
  		options.encoding = 'UTF-8'
    	options.fork = true
 	}
		
	test {
	    useJUnitPlatform()
	}
	
	javadoc {
	    options.encoding = 'UTF-8'
	}
	
	downloadLicenses {
	    ext.apacheTwo = license('Apache License, Version 2.0', 'http://opensource.org/licenses/Apache-2.0')
	    ext.bsd = license('BSD License', 'http://www.opensource.org/licenses/bsd-license.php')
	
	    includeProjectDependencies = true

	    aliases = [
	        (apacheTwo) : ['The Apache Software License, Version 2.0', 'Apache 2', 'Apache License Version 2.0', 'Apache License, Version 2.0', 'Apache License 2.0', license('Apache License', 'http://www.apache.org/licenses/LICENSE-2.0')],
	        (bsd) : ['BSD', license('New BSD License', 'http://www.opensource.org/licenses/bsd-license.php')]
	    ]
	
	    dependencyConfiguration = 'runtime'
	}
	
	license {
		ext.year = '2014-'+Calendar.getInstance().get(Calendar.YEAR)
		ext.name = 'Markus GÃ¤rtner'
		ext.email = 'markus.gaertner@uni-stuttgart.de'
		
		header = project.file('../LICENSE_HEADER')
		includes(["**/*.java", "**/*.properties", "**/*.ini", "**/*.xml"])
		dryRun = true
	}
}
