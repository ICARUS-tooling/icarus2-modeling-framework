
description = 'API for querying arbitrary corpora via the ICARUS2 modeling framework'

apply plugin: 'antlr'

// internal dependencies
dependencies {
 	api(project(':icarus2-model-api'))
	 
	testImplementation(project(':icarus2-model-defaults'))
 	testImplementation(project(':icarus2-test-utils'))
	testImplementation project(path: ':icarus2-model-api', configuration: 'tests')
	
	// https://mvnrepository.com/artifact/org.antlr/antlr4
	antlr "org.antlr:antlr4:${versions.antlr}"
}

configurations {
	// external dependencies managed by root build.gradle
	implementation.extendsFrom(antlrRuntime, json)
}

sourceSets {
	main {
		antlr {
			srcDirs = ["src/main/antlr"]
		}
	}
	test {
		antlr {
			srcDirs = ["src/test/antlr"]
		}
	}
}

generateTestGrammarSource {
//	doFirst {
//		println "${buildDir}/generated-src/antlr/main/de/ims/icarus2/query/api/iql/antlr".toString()
//	}
	arguments += ["-lib", "src/main/antlr/de/ims/icarus2/query/api/iql/antlr"]
}