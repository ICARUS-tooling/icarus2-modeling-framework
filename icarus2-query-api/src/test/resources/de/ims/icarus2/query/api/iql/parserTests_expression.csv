"input","expected","description"
"xx","","simple name"
"@xx","","variable"
123,"","integer literal"
12.456,"","floating point literal"
true,"","boolean literal"
false,"","boolean literal"
+123,"","signed integer literal"
-123.456,"","signed floating point literal"
"random_text","","string literal"
"random text","randomtext","string literal with whitspace"

"this.is.some.loooooong.path","","long path"
"@this.is.some.loooooong.path","","long path with variable start"

"xx[12]","","simple array"
"@xx[34]","","variable array"

"this.is.some.loooooong.path[56]","","long path array"
"@this.is.some.loooooong.path[78]","","long path array with variable start"
"this.is[12].some.loooooong[34].path[56]","","long path with intermediate array"
"@this.is[12].some.loooooong[56].path[78]","","long path with intermediate array and variable start"
"this.is.some.loooooong.path[func()]","","long path array with call"
"@this.is.some.loooooong.path[func()]","","long path array with call and variable start"

"array[1].func()","","call of array element"
"func()[1]","","call with array result"

"-func()","","signed negated call"
"+func()","","signed call call"

"123+456","","int literal addition"
"123-456","","int literal subtraction"
"123/456","","int literal division"
"123*456","","int literal multiplication"
"123%456","","int literal modulo"
"123 MOD 456","123MOD456","int literal modulo"
"123^456","","int literal pow"
"123&456","","int literal bitwise and"